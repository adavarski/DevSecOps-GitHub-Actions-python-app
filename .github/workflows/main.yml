name: CI

on:
  push:
    tags: [ "*" ]
    branches:
      - 'main'
  pull_request:
    branches: [ "**" ]

jobs:
 sast_scan:
   name: Run Bandit Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up Python
     uses: actions/setup-python@v2
     with:
       python-version: 3.8

   - name: Install Bandit
     run: pip install bandit
 
   - name: Run Bandit Scan
     run: bandit -ll -ii -r . -f json -o bandit-report.json

   - name: Upload Artifact
     uses: actions/upload-artifact@v3
     if: always()
     #continue-on-error: true
     with:
      name: bandit-findings
      path: bandit-report.json

 sca_scan:
   name: Run Snyk Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Run the SCA Snyk scan on the source code
     uses: snyk/actions/python-3.8@master
     continue-on-error: true
     env:
        #COMMAND: "pip install -r requirements.txt" 
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 
     with:
        args: --severity-threshold=high --sarif-file-output=snyk-report.sarif
        
   - name: Upload Artifact
     uses: actions/upload-artifact@v3
     if: always()
     with:
      name: snyk-findings
      path: snyk-report.sarif


#   Note: Need Snyk Github integration settuped       
   - name: Upload result to GitHub Code Scanning
     uses: github/codeql-action/upload-sarif@v2
     with:
          sarif_file: snyk-report.sarif    
      
 image_scan:
   name: Build Image and Run Image Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up Docker
     uses: docker-practice/actions-setup-docker@v1
     with:
      docker_version: '20.10.7'

   - name: Build Docker Image
     run: docker build -f Dockerfile -t myapp:latest .

#   - name: Login to DockerHub
#     id: dockerhub-login
#     uses: docker/login-action@v2
#     with:
#       username: ${{ secrets.DOCKERHUB_USERNAME }}
#       password: ${{ secrets.DOCKERHUB_TOKEN }}

#   - name: Docker Scout Scan
#     run: |
#       curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
#       sh install-scout.sh
#       docker scout quickview
#       docker scout cves


   - name: Docker Scout Scan
     uses: docker/scout-action@v1
     with:
       dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
       dockerhub-password: ${{ secrets.DOCKERHUB_TOKEN }}
       command: quickview,cves
       only-severities: critical,high
       sarif-file: scout-report.sarif
       
#Common Vulnerabilities and Exposures (CVE) & QuickBiew

   - name: Upload Artifact
     uses: actions/upload-artifact@v3
     if: always()
     with:
      name: scout-findings
      path: scout-report.sarif


#   - name: Login to DockerHub
#     uses: docker/login-action@v2
#     with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}

   
#   - name: Build, tag, and push image to DockerHub
  
#     run: |
        # Build a docker container and push it to DockerHub
#        git_hash=$(git rev-parse --short "$GITHUB_SHA")
#        docker build -t davarski/devsecops-demo:${GITHUB_REF##*/}-$git_hash .
#        echo "Pushing image to DockeHub..."
#        docker push davarski/devsecops-demo:${GITHUB_REF##*/}-$git_hash
   
